<?xml version='1.0' encoding='utf-8'?>
<struct id="motion::AccelerationProfile" name="AccelerationProfile" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <doc>
An AccelerationProfile takes event times and transforms them into a refined time based upon the acceleration mode.
As an example, a movement at 30 mm/sec with duration=0.6 sec might have Events with times like this:
0.1, 0.2, 0.3, 0.4, 0.5, 0.6
and transform them to something like:
0.2, 0.35, 0.5, 0.6, 0.75, 0.9
Currently, the initial and final velocity should both be 0 mm/sec.
Note that the events are already encoded at a *constant* velocity of Vmax (mm/sec) when they are passed through the AccelerationProfile. The AccelerationProfile should re-encode them so that the accelerate up to Vmax and then back to 0, and the velocity NEVER EXCEEDS Vmax.

Note: AccelerationProfile is an interface and all derivatives must implement the methods outlined in the AccelerationProfile class. NoAcceleration can be considered a default implementation of this interface.
</doc>
  <subclass access="public" name="NoAcceleration" ref="motion::NoAcceleration#motion::NoAcceleration">
    <brief>AccelerationProfile implementation that doesn't perform any acceleration transformation</brief>
  </subclass>
  <subclass access="public" name="ConstantAcceleration" ref="motion::ConstantAcceleration#motion::ConstantAcceleration" />
  <method id="motion::AccelerationProfile::begin" name="begin">
    <brief>Optional, but almost surely needed:</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="motion::AccelerationProfile::begin::moveDuration" name="moveDuration">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::AccelerationProfile::begin::Vmax" name="Vmax">
      <type builtin="yes" name="float" />
    </argument>
  </method>
</struct>
