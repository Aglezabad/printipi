<?xml version='1.0' encoding='utf-8'?>
<class id="plat::rpi::ChronoClock" name="ChronoClock" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <doc>
Implements the same interfaces as std::chrono::&amp;lt;clock&amp;gt;::now()
  to allow for highly efficient access to the system time (no context switching to kernel)

NOTE: The time reported by ChronoClockRpi may be different than the actual system time, so make sure to use consistent clock sources!
</doc>
  <variable id="plat::rpi::ChronoClock::is_steady" name="is_steady">
    <type builtin="yes" name="bool" qualifier=" const" />
  </variable>
  <typedef id="plat::rpi::ChronoClock::duration" name="duration">
    <type name="std::chrono::duration&lt;long, std::ratio&lt;1, 1000000&gt; &gt;" />
  </typedef>
  <typedef id="plat::rpi::ChronoClock::period" name="period">
    <type name="std::ratio&lt;1, 1000000&gt;" />
  </typedef>
  <typedef id="plat::rpi::ChronoClock::rep" name="rep">
    <type builtin="yes" name="long" />
  </typedef>
  <typedef id="plat::rpi::ChronoClock::time_point" name="time_point">
    <type name="std::chrono::time_point&lt;plat::rpi::ChronoClock, std::chrono::duration&lt;long, std::ratio&lt;1, 1000000&gt; &gt; &gt;" />
  </typedef>
  <method id="plat::rpi::ChronoClock::now" name="now" static="yes">
    <return>
      <type name="time_point" ref="plat::rpi::ChronoClock#plat::rpi::ChronoClock::time_point" />
    </return>
  </method>
</class>
