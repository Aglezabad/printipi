<?xml version='1.0' encoding='utf-8'?>
<classtemplate id="iodrv::IODrivers" name="IODrivers" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <templatetypeparameter id="iodrv::IODrivers::TupleT" name="TupleT" />
  <constructor id="iodrv::IODrivers::IODrivers&lt;TupleT&gt;" name="IODrivers&lt;TupleT&gt;">
    <argument id="iodrv::IODrivers::IODrivers&lt;TupleT&gt;::ioDrivers" name="ioDrivers">
      <type name="TupleT &amp;&amp;" />
    </argument>
  </constructor>
  <method id="iodrv::IODrivers::tuple" name="tuple">
    <return>
      <type name="TupleT" qualifier=" &amp;" />
    </return>
  </method>
  <classtemplate name="iterator" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator">
    <templatetypeparameter id="iodrv::IODrivers::iterator::Predicate" name="Predicate">
      <default>
        <type name="iodrv::IODrivers&lt;TupleT&gt;::NoPredicate" ref="iodrv::IODrivers::NoPredicate#iodrv::IODrivers::NoPredicate" />
      </default>
    </templatetypeparameter>
  </classtemplate>
  <classtemplate name="iterinfo" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo">
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::Predicate" name="Predicate">
      <default>
        <type name="iodrv::IODrivers&lt;TupleT&gt;::NoPredicate" ref="iodrv::IODrivers::NoPredicate#iodrv::IODrivers::NoPredicate" />
      </default>
    </templatetypeparameter>
  </classtemplate>
  <method id="iodrv::IODrivers::begin" name="begin">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
  </method>
  <method id="iodrv::IODrivers::end" name="end">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
  </method>
  <method id="iodrv::IODrivers::operator[]" name="operator[]">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
    <argument id="iodrv::IODrivers::operator[]::idx" name="idx">
      <type name="std::size_t" />
    </argument>
  </method>
  <methodtemplate id="iodrv::IODrivers::filter" name="filter">
    <brief>pass the predicate by value to achieve type deduction</brief>
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
    <argument id="iodrv::IODrivers::filter::p" name="p">
      <type name="const Predicate" qualifier=" const &amp;" />
    </argument>
    <templatetypeparameter id="iodrv::IODrivers::filter::Predicate" name="Predicate" />
  </methodtemplate>
  <method id="iodrv::IODrivers::fans" name="fans">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
  </method>
  <method id="iodrv::IODrivers::hotends" name="hotends">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
  </method>
  <method id="iodrv::IODrivers::heatedBeds" name="heatedBeds">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
  </method>
  <method id="iodrv::IODrivers::servos" name="servos">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
  </method>
  <method id="iodrv::IODrivers::endstops" name="endstops">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterinfo&lt;Predicate&gt;" ref="iodrv::IODrivers::iterinfo#iodrv::IODrivers::iterinfo" />
    </return>
  </method>
  <method id="iodrv::IODrivers::lockAllAxes" name="lockAllAxes">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="iodrv::IODrivers::unlockAllAxes" name="unlockAllAxes">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="iodrv::IODrivers::setHotendTemp" name="setHotendTemp">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::IODrivers::setHotendTemp::temp" name="temp">
      <type name="CelciusType" ref="index#CelciusType" />
    </argument>
  </method>
  <method id="iodrv::IODrivers::setBedTemp" name="setBedTemp">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::IODrivers::setBedTemp::temp" name="temp">
      <type name="CelciusType" ref="index#CelciusType" />
    </argument>
  </method>
  <method id="iodrv::IODrivers::setServoAngleAtServoIndex" name="setServoAngleAtServoIndex">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::IODrivers::setServoAngleAtServoIndex::index" name="index">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="iodrv::IODrivers::setServoAngleAtServoIndex::angleDeg" name="angleDeg">
      <type builtin="yes" name="float" />
    </argument>
  </method>
</classtemplate>
