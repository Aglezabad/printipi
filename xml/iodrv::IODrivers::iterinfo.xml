<?xml version='1.0' encoding='utf-8'?>
<classtemplate id="iodrv::IODrivers::iterinfo" name="iterinfo" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Allow one to build a filter before iterating.</brief>
  <doc>Also supports indexing and convenience functions that operate on the whole set.</doc>
  <templatetypeparameter id="iodrv::IODrivers::iterinfo::Predicate" name="Predicate">
    <default>
      <type name="iodrv::IODrivers&lt;TupleT&gt;::NoPredicate" ref="iodrv::IODrivers::NoPredicate#iodrv::IODrivers::NoPredicate" />
    </default>
  </templatetypeparameter>
  <constructor id="iodrv::IODrivers::iterinfo::iterinfo&lt;Predicate&gt;" name="iterinfo&lt;Predicate&gt;">
    <argument id="iodrv::IODrivers::iterinfo::iterinfo&lt;Predicate&gt;::drivers" name="drivers">
      <type name="TupleT" qualifier=" &amp;" />
    </argument>
  </constructor>
  <method id="iodrv::IODrivers::iterinfo::begin" name="begin">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
  </method>
  <method id="iodrv::IODrivers::iterinfo::end" name="end">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
  </method>
  <method id="iodrv::IODrivers::iterinfo::operator[]" name="operator[]">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator&lt;Predicate&gt;" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
    <argument id="iodrv::IODrivers::iterinfo::operator[]::idx" name="idx">
      <type name="std::size_t" />
    </argument>
  </method>
  <methodtemplate id="iodrv::IODrivers::iterinfo::apply" name="apply">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::IODrivers::iterinfo::apply::f" name="f">
      <type name="F &amp;&amp;" />
    </argument>
    <argument id="iodrv::IODrivers::iterinfo::apply::args" name="args">
      <type name="Args..." />
    </argument>
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::apply::F" name="F" />
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::apply::Args" name="Args" />
  </methodtemplate>
  <methodtemplate id="iodrv::IODrivers::iterinfo::reduce" name="reduce">
    <brief>Standard reduce function found in functional languages</brief>
    <doc>Return dflt if the collection is empty
Return f(dflt, ioDrivers[0]) for a one-item collection
Return f(f(dflt, ioDrivers[0]), ioDrivers[1]) for a two-item collection
Generalizes to f(...(dflt, ioDrivers[0]), ioDrivers[n]) for an n-item collection</doc>
    <return>
      <type name="Ret" />
    </return>
    <argument id="iodrv::IODrivers::iterinfo::reduce::f" name="f">
      <type name="F &amp;&amp;" />
    </argument>
    <argument id="iodrv::IODrivers::iterinfo::reduce::dflt" name="dflt">
      <type name="Ret" />
    </argument>
    <argument id="iodrv::IODrivers::iterinfo::reduce::args" name="args">
      <type name="Args..." />
    </argument>
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::reduce::F" name="F" />
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::reduce::Ret" name="Ret" />
    <templatetypeparameter id="iodrv::IODrivers::iterinfo::reduce::Args" name="Args" />
  </methodtemplate>
</classtemplate>
