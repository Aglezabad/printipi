<?xml version='1.0' encoding='utf-8'?>
<classtemplate id="iodrv::IODrivers::iterator" name="iterator" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="IODrivers&lt;TupleT&gt;::iteratorbase" ref="iodrv::IODrivers::iteratorbase#iodrv::IODrivers::iteratorbase" />
  </base>
  <templatetypeparameter id="iodrv::IODrivers::iterator::Predicate" name="Predicate">
    <default>
      <type name="iodrv::IODrivers&lt;TupleT&gt;::iteratorbase" ref="iodrv::IODrivers::iteratorbase#iodrv::IODrivers::iteratorbase" />
    </default>
  </templatetypeparameter>
  <constructor id="iodrv::IODrivers::iterator::iterator&lt;Predicate&gt;" name="iterator&lt;Predicate&gt;">
    <argument id="iodrv::IODrivers::iterator::iterator&lt;Predicate&gt;::drivers" name="drivers">
      <type name="TupleT" qualifier=" &amp;" />
    </argument>
    <argument id="iodrv::IODrivers::iterator::iterator&lt;Predicate&gt;::idx" name="idx">
      <type name="std::size_t" />
    </argument>
    <argument id="iodrv::IODrivers::iterator::iterator&lt;Predicate&gt;::filterFirst" name="filterFirst">
      <type builtin="yes" name="bool" />
    </argument>
  </constructor>
  <method id="iodrv::IODrivers::iterator::operator++" name="operator++">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="iodrv::IODrivers::iterator::operator+" name="operator+">
    <return>
      <type name="IODrivers&lt;TupleT&gt;::iterator" ref="iodrv::IODrivers::iterator#iodrv::IODrivers::iterator" />
    </return>
    <argument id="iodrv::IODrivers::iterator::operator+::add" name="add">
      <type name="std::size_t" />
    </argument>
  </method>
</classtemplate>
