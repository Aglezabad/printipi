<?xml version='1.0' encoding='utf-8'?>
<namespace id="motion" name="motion" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>for motion::USE_ENDSTOPS</brief>
  <functiontemplate id="motion::stepDirFromSign" name="stepDirFromSign">
    <return>
      <type name="StepDirection" ref="motion#motion::StepDirection" />
    </return>
    <argument id="motion::stepDirFromSign::dir" name="dir">
      <type name="T" />
    </argument>
    <templatetypeparameter id="motion::stepDirFromSign::T" name="T" />
  </functiontemplate>
  <struct name="AccelerationProfile" ref="motion::AccelerationProfile#motion::AccelerationProfile" />
  <classtemplate name="AngularDeltaCoordMap" ref="motion::AngularDeltaCoordMap#motion::AngularDeltaCoordMap">
    <templatetypeparameter id="motion::AngularDeltaCoordMap::Stepper1" name="Stepper1" />
    <templatetypeparameter id="motion::AngularDeltaCoordMap::Stepper2" name="Stepper2" />
    <templatetypeparameter id="motion::AngularDeltaCoordMap::Stepper3" name="Stepper3" />
    <templatetypeparameter id="motion::AngularDeltaCoordMap::Stepper4" name="Stepper4" />
    <templatetypeparameter id="motion::AngularDeltaCoordMap::BedLevelT" name="BedLevelT">
      <default>
        <type name="Matrix3x3" ref="Matrix3x3#Matrix3x3" />
      </default>
    </templatetypeparameter>
  </classtemplate>
  <classtemplate name="AngularDeltaStepper" ref="motion::AngularDeltaStepper#motion::AngularDeltaStepper">
    <templatetypeparameter id="motion::AngularDeltaStepper::StepperDriverT" name="StepperDriverT" />
  </classtemplate>
  <structtemplate name="array_size" ref="motion::array_size#motion::array_size">
    <brief>Easiest way to extract the size of an array from its type.</brief>
    <templatetypeparameter id="motion::array_size::ArrayT" name="ArrayT" />
  </structtemplate>
  <class name="AxisStepper" ref="motion::AxisStepper#motion::AxisStepper" />
  <classtemplate name="AxisStepperWithDriver" ref="motion::AxisStepperWithDriver#motion::AxisStepperWithDriver">
    <templatetypeparameter id="motion::AxisStepperWithDriver::StepperDriver" name="StepperDriver" />
  </classtemplate>
  <class name="ConstantAcceleration" ref="motion::ConstantAcceleration#motion::ConstantAcceleration" />
  <class name="CoordMap" ref="motion::CoordMap#motion::CoordMap" />
  <classtemplate name="LinearCoordMap" ref="motion::LinearCoordMap#motion::LinearCoordMap">
    <templatetypeparameter id="motion::LinearCoordMap::Stepper1" name="Stepper1" />
    <templatetypeparameter id="motion::LinearCoordMap::Stepper2" name="Stepper2" />
    <templatetypeparameter id="motion::LinearCoordMap::Stepper3" name="Stepper3" />
    <templatetypeparameter id="motion::LinearCoordMap::Stepper4" name="Stepper4" />
    <templatetypeparameter id="motion::LinearCoordMap::BedLevelT" name="BedLevelT">
      <default>
        <type name="Matrix3x3" ref="Matrix3x3#Matrix3x3" />
      </default>
    </templatetypeparameter>
  </classtemplate>
  <classtemplate name="LinearDeltaCoordMap" ref="motion::LinearDeltaCoordMap#motion::LinearDeltaCoordMap">
    <templatetypeparameter id="motion::LinearDeltaCoordMap::Stepper1" name="Stepper1" />
    <templatetypeparameter id="motion::LinearDeltaCoordMap::Stepper2" name="Stepper2" />
    <templatetypeparameter id="motion::LinearDeltaCoordMap::Stepper3" name="Stepper3" />
    <templatetypeparameter id="motion::LinearDeltaCoordMap::Stepper4" name="Stepper4" />
    <templatetypeparameter id="motion::LinearDeltaCoordMap::BedLevelT" name="BedLevelT">
      <default>
        <type name="Matrix3x3" ref="Matrix3x3#Matrix3x3" />
      </default>
    </templatetypeparameter>
  </classtemplate>
  <classtemplate name="LinearDeltaStepper" ref="motion::LinearDeltaStepper#motion::LinearDeltaStepper">
    <templatetypeparameter id="motion::LinearDeltaStepper::StepperDriverT" name="StepperDriverT" />
  </classtemplate>
  <classtemplate name="LinearStepper" ref="motion::LinearStepper#motion::LinearStepper">
    <templatetypeparameter id="motion::LinearStepper::StepperDriverT" name="StepperDriverT" />
  </classtemplate>
  <classtemplate name="MaxOutputEventSequenceSize" ref="motion::MaxOutputEventSequenceSize#motion::MaxOutputEventSequenceSize">
    <brief>given a tuple of AxisSteppers, MaxOutputEventSequenceSize&amp;lt;myTuple&amp;gt;::maxSize will return the maximum size</brief>
    <templatetypeparameter id="motion::MaxOutputEventSequenceSize::AxisStepperTypes" name="AxisStepperTypes" />
    <templatenontypeparameter default="std" id="motion::MaxOutputEventSequenceSize::IdxPlusOne" name="IdxPlusOne">
      <type name="std::size_t" />
    </templatenontypeparameter>
  </classtemplate>
  <classtemplate name="MotionPlanner" ref="motion::MotionPlanner#motion::MotionPlanner">
    <templatetypeparameter id="motion::MotionPlanner::Interface" name="Interface" />
  </classtemplate>
  <struct name="NoAcceleration" ref="motion::NoAcceleration#motion::NoAcceleration">
    <brief>AccelerationProfile implementation that doesn't perform any acceleration transformation</brief>
  </struct>
  <enum anonymous="yes" id="motion::CartesianAxis" name="CartesianAxis">
    <enumvalue id="motion::CARTESIAN_AXIS_X" name="CARTESIAN_AXIS_X" value="0" />
    <enumvalue id="motion::CARTESIAN_AXIS_Y" name="CARTESIAN_AXIS_Y" value="1" />
    <enumvalue id="motion::CARTESIAN_AXIS_Z" name="CARTESIAN_AXIS_Z" value="2" />
    <enumvalue id="motion::CARTESIAN_AXIS_E" name="CARTESIAN_AXIS_E" value="3" />
  </enum>
  <enum anonymous="yes" id="motion::DeltaAxis" name="DeltaAxis">
    <enumvalue id="motion::DELTA_AXIS_A" name="DELTA_AXIS_A" value="0" />
    <enumvalue id="motion::DELTA_AXIS_B" name="DELTA_AXIS_B" value="1" />
    <enumvalue id="motion::DELTA_AXIS_C" name="DELTA_AXIS_C" value="2" />
    <enumvalue id="motion::DELTA_AXIS_E" name="DELTA_AXIS_E" value="3" />
    <enumvalue id="motion::ANGULARDELTA_AXIS_A" name="ANGULARDELTA_AXIS_A" value="0" />
    <enumvalue id="motion::ANGULARDELTA_AXIS_B" name="ANGULARDELTA_AXIS_B" value="1" />
    <enumvalue id="motion::ANGULARDELTA_AXIS_C" name="ANGULARDELTA_AXIS_C" value="2" />
    <enumvalue id="motion::ANGULARDELTA_AXIS_E" name="ANGULARDELTA_AXIS_E" value="3" />
  </enum>
  <enum anonymous="yes" id="motion::MotionFlags" name="MotionFlags">
    <brief>bitwise-or'd flags providing more context for movements</brief>
    <enumvalue id="motion::MOTIONFLAGS_DEFAULT" name="MOTIONFLAGS_DEFAULT" value="0" />
    <enumvalue id="motion::NO_LEVELING" name="NO_LEVELING" value="1" />
    <enumvalue id="motion::NO_BOUNDING" name="NO_BOUNDING" value="2" />
    <enumvalue id="motion::USE_ENDSTOPS" name="USE_ENDSTOPS" value="4" />
    <function id="motion::operator|" name="operator|">
      <brief>bitwise OR operator for MotionFlags, to avoid NO_LEVELING | NO_BOUNDING resulting in an integer type instead of a MotionFlags type.</brief>
      <return>
        <type name="MotionFlags" ref="motion#motion::MotionFlags" />
      </return>
      <argument id="motion::operator|::a" name="a">
        <type name="MotionFlags" ref="motion#motion::MotionFlags" />
      </argument>
      <argument id="motion::operator|::b" name="b">
        <type name="MotionFlags" ref="motion#motion::MotionFlags" />
      </argument>
    </function>
  </enum>
  <enum anonymous="yes" id="motion::StepDirection" name="StepDirection">
    <enumvalue id="motion::StepBackward" name="StepBackward" value="0" />
    <enumvalue id="motion::StepForward" name="StepForward" value="1" />
    <functiontemplate id="motion::stepDirToSigned" name="stepDirToSigned">
      <return>
        <type name="T" />
      </return>
      <argument id="motion::stepDirToSigned::dir" name="dir">
        <type name="StepDirection" ref="motion#motion::StepDirection" />
      </argument>
      <templatetypeparameter id="motion::stepDirToSigned::T" name="T" />
    </functiontemplate>
  </enum>
</namespace>
