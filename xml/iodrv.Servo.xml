<?xml version='1.0' encoding='utf-8'?>
<class id="iodrv::Servo" name="Servo" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Controls a Servo motor.</brief>
  <doc>Servos are controlled by periodically sending a pulse of a specified length.
The length of that pulse determines the position at which the servo should be placed, and the servo will attempt to stay at that location until the next command.
Typical pulse length varies from 1ms to 2ms for the full control range,
while the pulses must occur between 40-200 times per second.</doc>
  <base access="public">
    <type name="IODriver" ref="iodrv::IODriver#iodrv::IODriver" />
  </base>
  <constructor id="iodrv::Servo::Servo" name="Servo">
    <brief>Instantiate a Servo controlled by PWM on pin @pin</brief>
    <doc>A Servo operates using pwm of a fixed frequency, and adjusting only the duty cycle to control angle.
</doc>
    <argument id="iodrv::Servo::Servo::pin" name="pin">
      <type name="IoPin &amp;&amp;" />
    </argument>
    <argument id="iodrv::Servo::Servo::cycleLength" name="cycleLength">
      <type name="plat::generic::ChronoClock::duration" ref="plat::generic::ChronoClock#plat::generic::ChronoClock::duration" />
    </argument>
    <argument id="iodrv::Servo::Servo::minMaxOnTime" name="minMaxOnTime">
      <type name="std::pair&lt;std::chrono::duration&lt;long, std::ratio&lt;1, 1000000000&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1, 1000000000&gt; &gt; &gt;" />
    </argument>
    <argument id="iodrv::Servo::Servo::minMaxAngle" name="minMaxAngle">
      <type name="std::pair&lt;float, float&gt;" />
    </argument>
    <argument id="iodrv::Servo::Servo::initialAngle" name="initialAngle">
      <type builtin="yes" name="float" />
    </argument>
  </constructor>
  <method id="iodrv::Servo::consumeNextEvent" name="consumeNextEvent" override="yes">
    <brief>Used by State for event scheduling.</brief>
    <doc>When the State calls this, it is an acknowledgement that the last event returned from peekNextEvent() has been scheduled.</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <override name="IODriver::consumeNextEvent" ref="iodrv::IODriver#iodrv::IODriver::consumeNextEvent" />
  </method>
  <method id="iodrv::Servo::isServo" name="isServo" override="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <override name="IODriver::isServo" ref="iodrv::IODriver#iodrv::IODriver::isServo" />
  </method>
  <method id="iodrv::Servo::peekNextEvent" name="peekNextEvent" override="yes">
    <brief>Used by State for event scheduling.</brief>
    <doc>Queries information about the next time this Servo needs to toggle an IoPin</doc>
    <return>
      <type name="OutputEvent" ref="OutputEvent#OutputEvent" />
    </return>
    <override name="IODriver::peekNextEvent" ref="iodrv::IODriver#iodrv::IODriver::peekNextEvent" />
  </method>
  <method id="iodrv::Servo::setServoAngleDegrees" name="setServoAngleDegrees" override="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::Servo::setServoAngleDegrees::angle" name="angle">
      <type builtin="yes" name="float" />
    </argument>
    <override name="IODriver::setServoAngleDegrees" ref="iodrv::IODriver#iodrv::IODriver::setServoAngleDegrees" />
  </method>
</class>
