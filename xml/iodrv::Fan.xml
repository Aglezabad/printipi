<?xml version='1.0' encoding='utf-8'?>
<class id="iodrv::Fan" name="Fan" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <doc>
The Fan class serves to control a physical Fan, often used to cool plastic as it exits the hotend.
This class essentially wraps an IoPin so that it can be commanded and recognized as a fan.
</doc>
  <base access="public">
    <type name="IODriver" ref="iodrv::IODriver#iodrv::IODriver" />
  </base>
  <constructor id="iodrv::Fan::Fan" name="Fan">
    <brief>@pin the IoPin that powers the fan.</brief>
    <doc>In most cases, the fan should NOT be directly powered from the microcontroller.
It should either be behind a transistor whose input is connected to @pin,
or (if its a 3 wire fan), the fan should be powered from the power rail &amp; the control signal (3rd wire) should be connected to @pin
</doc>
    <argument id="iodrv::Fan::Fan::pin" name="pin">
      <type name="IoPin &amp;&amp;" />
    </argument>
    <argument id="iodrv::Fan::Fan::defaultState" name="defaultState">
      <type name="DefaultIoState" ref="iodrv#iodrv::DefaultIoState" />
    </argument>
    <argument id="iodrv::Fan::Fan::period" name="period">
      <type builtin="yes" name="float" />
    </argument>
  </constructor>
  <method id="iodrv::Fan::isFan" name="isFan" override="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <override name="IODriver::isFan" ref="iodrv::IODriver#iodrv::IODriver::isFan" />
  </method>
  <method id="iodrv::Fan::setFanDutyCycle" name="setFanDutyCycle" override="yes">
    <brief>called by State upon receiving an M106 gcode</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::Fan::setFanDutyCycle::dutyCycle" name="dutyCycle">
      <type builtin="yes" name="float" />
    </argument>
    <override name="IODriver::setFanDutyCycle" ref="iodrv::IODriver#iodrv::IODriver::setFanDutyCycle" />
  </method>
</class>
