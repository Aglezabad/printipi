<?xml version='1.0' encoding='utf-8'?>
<classtemplate id="motion::LinearCoordMap" name="LinearCoordMap" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <base access="public">
    <type name="CoordMap" ref="motion::CoordMap#motion::CoordMap" />
  </base>
  <templatetypeparameter id="motion::LinearCoordMap::Stepper1" name="Stepper1" />
  <templatetypeparameter id="motion::LinearCoordMap::Stepper2" name="Stepper2" />
  <templatetypeparameter id="motion::LinearCoordMap::Stepper3" name="Stepper3" />
  <templatetypeparameter id="motion::LinearCoordMap::Stepper4" name="Stepper4" />
  <templatetypeparameter id="motion::LinearCoordMap::BedLevelT" name="BedLevelT">
    <default>
      <type name="Matrix3x3" ref="Matrix3x3#Matrix3x3" />
    </default>
  </templatetypeparameter>
  <method id="motion::LinearCoordMap::STEPS_MM" name="STEPS_MM">
    <return>
      <type builtin="yes" name="float" />
    </return>
    <argument id="motion::LinearCoordMap::STEPS_MM::axisIdx" name="axisIdx">
      <type name="std::size_t" />
    </argument>
  </method>
  <method id="motion::LinearCoordMap::MM_STEPS" name="MM_STEPS">
    <return>
      <type builtin="yes" name="float" />
    </return>
    <argument id="motion::LinearCoordMap::MM_STEPS::axisIdx" name="axisIdx">
      <type name="std::size_t" />
    </argument>
  </method>
  <constructor id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;" name="LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;">
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::STEPS_MM_X" name="STEPS_MM_X">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::STEPS_MM_Y" name="STEPS_MM_Y">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::STEPS_MM_Z" name="STEPS_MM_Z">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::STEPS_MM_E" name="STEPS_MM_E">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::homeVelocity" name="homeVelocity">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::stepper1" name="stepper1">
      <type name="Stepper1 &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::stepper2" name="stepper2">
      <type name="Stepper2 &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::stepper3" name="stepper3">
      <type name="Stepper3 &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::stepper4" name="stepper4">
      <type name="Stepper4 &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::endstopX" name="endstopX">
      <type name="iodrv::Endstop &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::endstopY" name="endstopY">
      <type name="iodrv::Endstop &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::endstopZ" name="endstopZ">
      <type name="iodrv::Endstop &amp;&amp;" />
    </argument>
    <argument id="motion::LinearCoordMap::LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::t" name="t">
      <type name="const BedLevelT" qualifier=" const &amp;" />
    </argument>
  </constructor>
  <method id="motion::LinearCoordMap::getAxisSteppers" name="getAxisSteppers" override="yes">
    <return>
      <type name="LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::_AxisStepperTypes" ref="motion::LinearCoordMap#motion::LinearCoordMap::_AxisStepperTypes" />
    </return>
    <override name="CoordMap::getAxisSteppers" ref="motion::CoordMap#motion::CoordMap::getAxisSteppers" />
  </method>
  <method id="motion::LinearCoordMap::getArcSteppers" name="getArcSteppers" override="yes">
    <return>
      <type name="LinearCoordMap&lt;Stepper1, Stepper2, Stepper3, Stepper4, BedLevelT&gt;::_ArcStepperTypes" ref="motion::LinearCoordMap#motion::LinearCoordMap::_ArcStepperTypes" />
    </return>
    <override name="CoordMap::getArcSteppers" ref="motion::CoordMap#motion::CoordMap::getArcSteppers" />
  </method>
  <method id="motion::LinearCoordMap::getEndstop" name="getEndstop" override="yes">
    <return>
      <type name="iodrv::Endstop" qualifier=" const &amp;" ref="iodrv::Endstop#iodrv::Endstop" />
    </return>
    <argument id="motion::LinearCoordMap::getEndstop::axis" name="axis">
      <type name="std::size_t" />
    </argument>
    <override name="CoordMap::getEndstop" ref="motion::CoordMap#motion::CoordMap::getEndstop" />
  </method>
  <methodtemplate id="motion::LinearCoordMap::getStepperDriver" name="getStepperDriver">
    <return>
      <type name="const typename std::tuple_element&lt;idx, StepperDriverTypes&gt;::type" qualifier=" const &amp;" />
    </return>
    <templatenontypeparameter default="std" id="motion::LinearCoordMap::getStepperDriver::idx" name="idx">
      <type name="std::size_t" />
    </templatenontypeparameter>
  </methodtemplate>
  <method id="motion::LinearCoordMap::numAxis" name="numAxis" override="yes" static="yes">
    <return>
      <type name="std::size_t" />
    </return>
    <override name="CoordMap::numAxis" ref="motion::CoordMap#motion::CoordMap::numAxis" />
  </method>
  <methodtemplate id="motion::LinearCoordMap::executeHomeRoutine" name="executeHomeRoutine" override="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="motion::LinearCoordMap::executeHomeRoutine::interface" name="interface">
      <type name="Interface" qualifier=" &amp;" />
    </argument>
    <override name="CoordMap::executeHomeRoutine" ref="motion::CoordMap#motion::CoordMap::executeHomeRoutine" />
    <templatetypeparameter id="motion::LinearCoordMap::executeHomeRoutine::Interface" name="Interface" />
  </methodtemplate>
  <method id="motion::LinearCoordMap::getHomePosition" name="getHomePosition" override="yes">
    <return>
      <type name="std::array&lt;int, 4&gt;" />
    </return>
    <argument id="motion::LinearCoordMap::getHomePosition::cur" name="cur">
      <type name="std::array&lt;int, 4&gt;" qualifier=" const &amp;" />
    </argument>
    <override name="CoordMap::getHomePosition" ref="motion::CoordMap#motion::CoordMap::getHomePosition" />
  </method>
  <method id="motion::LinearCoordMap::applyLeveling" name="applyLeveling" override="yes">
    <return>
      <type name="Vector3f" ref="index#Vector3f" />
    </return>
    <argument id="motion::LinearCoordMap::applyLeveling::xyz" name="xyz">
      <type name="Vector3f" qualifier=" const &amp;" ref="index#Vector3f" />
    </argument>
    <override name="CoordMap::applyLeveling" ref="motion::CoordMap#motion::CoordMap::applyLeveling" />
  </method>
  <method id="motion::LinearCoordMap::bound" name="bound" override="yes">
    <return>
      <type name="Vector4f" ref="index#Vector4f" />
    </return>
    <argument id="motion::LinearCoordMap::bound::xyze" name="xyze">
      <type name="Vector4f" qualifier=" const &amp;" ref="index#Vector4f" />
    </argument>
    <override name="CoordMap::bound" ref="motion::CoordMap#motion::CoordMap::bound" />
  </method>
  <method id="motion::LinearCoordMap::xyzeFromMechanical" name="xyzeFromMechanical" override="yes">
    <return>
      <type name="Vector4f" ref="index#Vector4f" />
    </return>
    <argument id="motion::LinearCoordMap::xyzeFromMechanical::mech" name="mech">
      <type name="std::array&lt;int, 4&gt;" qualifier=" const &amp;" />
    </argument>
    <override name="CoordMap::xyzeFromMechanical" ref="motion::CoordMap#motion::CoordMap::xyzeFromMechanical" />
  </method>
</classtemplate>
