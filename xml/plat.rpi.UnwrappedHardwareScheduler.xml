<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="plat::rpi::UnwrappedHardwareScheduler" name="UnwrappedHardwareScheduler" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <doc>
Underlying class that is abstracted by the actual HardwareScheduler (defined further below).
</doc>
  <constructor id="plat::rpi::UnwrappedHardwareScheduler::UnwrappedHardwareScheduler" name="UnwrappedHardwareScheduler" />
  <method id="plat::rpi::UnwrappedHardwareScheduler::cleanup" name="cleanup" static="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="plat::rpi::UnwrappedHardwareScheduler::onIdleCpu" name="onIdleCpu">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::onIdleCpu::interval" name="interval">
      <type name="OnIdleCpuIntervalT" ref="index#OnIdleCpuIntervalT" />
    </argument>
  </method>
  <method id="plat::rpi::UnwrappedHardwareScheduler::queue" name="queue">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::queue::evt" name="evt">
      <type name="OutputEvent" qualifier=" const &amp;" ref="OutputEvent#OutputEvent" />
    </argument>
  </method>
  <method id="plat::rpi::UnwrappedHardwareScheduler::queuePwm" name="queuePwm">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::queuePwm::pin" name="pin">
      <type name="PrimitiveIoPin" qualifier=" const &amp;" ref="plat::rpi::PrimitiveIoPin#plat::rpi::PrimitiveIoPin" />
    </argument>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::queuePwm::ratio" name="ratio">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::queuePwm::maxPeriod" name="maxPeriod">
      <type name="generic::ChronoClock::duration" ref="plat::generic::ChronoClock#plat::generic::ChronoClock::duration" />
    </argument>
  </method>
  <method id="plat::rpi::UnwrappedHardwareScheduler::schedTime" name="schedTime">
    <return>
      <type name="generic::ChronoClock::time_point" ref="plat::generic::ChronoClock#plat::generic::ChronoClock::time_point" />
    </return>
    <argument id="plat::rpi::UnwrappedHardwareScheduler::schedTime::evtTime" name="evtTime">
      <type name="generic::ChronoClock::time_point" ref="plat::generic::ChronoClock#plat::generic::ChronoClock::time_point" />
    </argument>
  </method>
</class>
