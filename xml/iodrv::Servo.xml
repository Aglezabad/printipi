<?xml version='1.0' encoding='utf-8'?>
<class id="iodrv::Servo" name="Servo" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Controls a Servo motor.</brief>
  <doc>Servos are controlled by periodically sending a pulse of a specified length.
The length of that pulse determines the position at which the servo should be placed, and the servo will attempt to stay at that location until the next command.
Typical pulse length varies from 1ms to 2ms for the full control range,
while the pulses must occur between 40-200 times per second.

Not yet ready for use; see discussion @ https://github.com/Wallacoloo/printipi/issues/62</doc>
  <base access="public">
    <type name="IODriver" ref="iodrv::IODriver#iodrv::IODriver" />
  </base>
  <constructor id="iodrv::Servo::Servo" name="Servo">
    <argument id="iodrv::Servo::Servo::pin" name="pin">
      <type name="IoPin &amp;&amp;" />
    </argument>
    <argument id="iodrv::Servo::Servo::cycleLength" name="cycleLength">
      <type name="plat::generic::ChronoClock::duration" ref="plat::generic::ChronoClock#plat::generic::ChronoClock::duration" />
    </argument>
    <argument id="iodrv::Servo::Servo::minMaxOnTime" name="minMaxOnTime">
      <type name="std::pair&lt;std::chrono::duration&lt;long, std::ratio&lt;1, 1000000000&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1, 1000000000&gt; &gt; &gt;" />
    </argument>
    <argument id="iodrv::Servo::Servo::minMaxAngle" name="minMaxAngle">
      <type name="std::pair&lt;float, float&gt;" />
    </argument>
    <argument id="iodrv::Servo::Servo::initialAngle" name="initialAngle">
      <type builtin="yes" name="float" />
    </argument>
  </constructor>
  <method id="iodrv::Servo::isServo" name="isServo" override="yes">
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <override name="IODriver::isServo" ref="iodrv::IODriver#iodrv::IODriver::isServo" />
  </method>
  <method id="iodrv::Servo::nextEvent" name="nextEvent" override="yes">
    <return>
      <type name="OutputEvent" ref="OutputEvent#OutputEvent" />
    </return>
    <override name="IODriver::nextEvent" ref="iodrv::IODriver#iodrv::IODriver::nextEvent" />
  </method>
  <method id="iodrv::Servo::setServoAngle" name="setServoAngle" override="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="iodrv::Servo::setServoAngle::angle" name="angle">
      <type builtin="yes" name="float" />
    </argument>
    <override name="IODriver::setServoAngle" ref="iodrv::IODriver#iodrv::IODriver::setServoAngle" />
  </method>
</class>
