<?xml version='1.0' encoding='utf-8'?>
<struct id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex" name="IODriver__setServoAngleAtServoIndex" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>IODriver::setServoAngleAtServoIndex helper</brief>
  <methodtemplate id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()" name="operator()">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()::index" name="index">
      <type name="std::size_t" />
    </argument>
    <argument id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()::driver" name="driver">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <argument id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()::desiredIndex" name="desiredIndex">
      <type name="std::size_t" />
    </argument>
    <argument id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()::angleDeg" name="angleDeg">
      <type builtin="yes" name="float" />
    </argument>
    <templatetypeparameter id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::operator()::T" name="T" />
  </methodtemplate>
  <field id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::numServosSeen" name="numServosSeen">
    <brief>access servos by their SERVO index, not their index in the ioDrivers tuple.</brief>
    <doc>That is, servo #0 is the first servo in the tuple,
servo #1 is the second, and so on.</doc>
    <type name="std::size_t" />
  </field>
  <constructor id="tupleutil::(anonymous::1)::IODriver__setServoAngleAtServoIndex::IODriver__setServoAngleAtServoIndex" name="IODriver__setServoAngleAtServoIndex" />
</struct>
