<?xml version='1.0' encoding='utf-8'?>
<struct id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers" name="_AxisStepper__initAxisArcSteppers" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Helper class for AxisStepper::initAxisArcSteppers</brief>
  <methodtemplate id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()" name="operator()">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::_myIdx" name="_myIdx">
      <type name="std::integral_constant&lt;_Tp, __v&gt;" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::stepper" name="stepper">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::steppers" name="steppers">
      <type name="TupleT" qualifier="*" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::useEndstops" name="useEndstops">
      <type builtin="yes" name="bool" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::map" name="map">
      <type name="const CoordMapT" qualifier=" const *" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::curPos" name="curPos">
      <type name="std::array&lt;typename, std::size_t&gt;" qualifier=" &amp;" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::center" name="center">
      <type name="Vector3f" qualifier=" const &amp;" ref="index#Vector3f" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::u" name="u">
      <type name="Vector3f" qualifier=" const &amp;" ref="index#Vector3f" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::v" name="v">
      <type name="Vector3f" qualifier=" const &amp;" ref="index#Vector3f" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::arcRad" name="arcRad">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::arcVel" name="arcVel">
      <type builtin="yes" name="float" />
    </argument>
    <argument id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::extVel" name="extVel">
      <type builtin="yes" name="float" />
    </argument>
    <templatenontypeparameter default="std" id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::MyIdx" name="MyIdx">
      <type name="std::size_t" />
    </templatenontypeparameter>
    <templatetypeparameter id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::TupleT" name="TupleT" />
    <templatetypeparameter id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::T" name="T" />
    <templatetypeparameter id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::CoordMapT" name="CoordMapT" />
    <templatenontypeparameter default="std" id="motion::(anonymous::1)::_AxisStepper__initAxisArcSteppers::operator()::MechSize" name="MechSize">
      <type name="std::size_t" />
    </templatenontypeparameter>
  </methodtemplate>
</struct>
